- Add a -d onto `script/server` to detach it from the console. add '2>&1' to include STDERR in STDOUT
  - but how to then kill that process?
  
- How to provide some way to tap into logging so you can read log messages as if the app was open in a console?

- tail -f the development log?  Ajax call to a /logger controller that then constantly returns the log as requested
  - add an 'environment' to the app so we know which log to grab, and what mode to start in
  
- System model keeps track of system-wide settings.
  - Have some kind of "Setup" button that inserts these default settings?
  - local_hostname = by default, 'localhost' but can be overridden
  - remote_hostname = by default, result of a `hostname` call, but can be overridden
  
- If an error is thrown when starting up, display a link to the results of the standard error out

- Add link to email someone a URL to a project

- Throw errors based on different conditions:
  # project.pid = File.open("#{project.rails_root}/tmp/pids/mongrel.pid").read.chomp.to_i             # command should have created a mongrel.pid file, read that in and store the pid
  # raise NoSuchDirectory, "The directory #{project.rails_root} does not exist."                    # if the output is blank then there was an error, most likely that the command wasn't found (wrong directory structure)
